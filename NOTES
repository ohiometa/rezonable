CALL DEPENDENCIES AS OF APRIL 8
Lists all functions, and under them the functions they are called from.
stub.py is not included, as it's self-contained.
Calls to msg are subject to casual changes.

Functions marked with % are not part of possible call loops, although
call loops may appear beneath them.

atdq.py

	atdq
		newResolver
		unpurge
		run
%	ctda
		run
%	tick
		run
	attend
		atdq
		ctda
		tick
		attend
	newResolver
		atdq (constructs)
		attend (iterates)
%	enq
		newResolver
%	nearestNameservers
		newResolver
%	unpurge
		run

cache.py

%	saveCache
		rezonable.py cleanup
		consoleDo
%	loadCache
		run
%	setCache
		ctda
		createBootstrapZone
		loadHosts
%	getCache
		newResolver
		nearestNameservers
%	getCacheTTL
		newResolver
%	createBootstrapZone
		run
%	purgeCache
		run
%	cacheDump
		consoleDo
%	domainSortKey
		cacheDump

dc.py

%	histo
		consoleDo
%	consoleThread
		run
%	show_im
		consoleDo
%	consoleDo
		run

hosts.py

%	loadHosts
		run

parsun.py

%	unpackBits
		parse
%	packBits
		unparse
	unpackRR
		unpackRR
		unpackDomain
		parse
	unpackDomain
		unpackDomain
		unpackRR
%	parse
		run
%	unparse
		attend
		enq
%	compressDomain
		unparse
		unparseRR
%	unparseRR
		unparse

rezonable.py

%	run
		rezonable.py startup
%	handler
		run

tiny.py

%	dq
		enq
%	parse_dotted_quad
		loadHosts
%	parentOfZone
		nearestNameservers
%	msg
		newResolver
		loadCache
		saveCache
		loadHosts
		run
%	withinZone
		ctda
%	hostname_syntax_ok
		loadHosts

CONCLUSIONS

1. Call loops are not the only loops, there are also iterative loops
   to seek out.

2. Here are the only possible call loops that I found.
   Order is [this, what_this_calls, what_is_called_next, ...]

	[unpackRR]
	[unpackDomain]
	[unpackRR unpackDomain]
	[newResolver atdq]
	[atdq attend newResolver]
	[attend]

3. Consider the possibility of more loops through 'finder' and 'waiter'.


